from utils.image_processing import make_preview
from handlers.init import *
import asyncio
import os
import io


async def start_cmd_handler(msg: Message,):

    answer = ('–ü—Ä–∏–≤–µ—Ç, *%s*!üëã\n\n'
              '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞.\n'
              '–¢—ã –º–æ–∂–µ—à—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–Ω–æ–≤–æ–µ '
              '–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏–≤ –µ–≥–æ '
              '–∫ —Ç–µ–∫—Å—Ç—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n\n'
              '‚ö† –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (*–¥–≤–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É '
              '–∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º*):\n'
              '`–ó–∞–≥–æ–ª–æ–≤–æ–∫\n\n'
              '–û–ø–∏—Å–∞–Ω–∏–µ`\n'
              '{ —Ñ–ª–∞–≥–∏ }\n\n'
              'üö© –§–ª–∞–≥–∏\n\n'
              'üí¨ –®—Ä–∏—Ñ—Ç—ã\n'
              '`/ts 150` - —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞\n'
              '`/ds 100` - —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏—è'
              '`/to 10` - —Å–º–µ—â–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞\n'
              '`/do 400` - —Å–º–µ—â–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è\n\n'
              'üìñ –°—Ç—Ä–æ–∫–∏\n'
              '`/tlw 30` - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –±—É–∫–≤ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ\n'
              '`/dlw 60` - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –±—É–∫–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏\n\n'
              'üî§ –®—Ä–∏—Ñ—Ç—ã\n'
              '`/tf 0` - —à—Ä–∏—Ñ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ (0  /1)\n'
              '`/df 1` - —à—Ä–∏—Ñ—Ç –æ–ø–∏—Å–∞–Ω–∏—è (0 / 1)\n\n'
              'üñº –§–æ–Ω\n'
              '`/bg 5` - –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ (1 - 9)\n'
              '`/bl 30` - –±–ª—é—Ä —Ñ–æ–Ω–∞ (1 - 100)\n'
              '`/nc 1` - –Ω–µ –∫–∞–¥—Ä–∏—Ä–æ–≤–∞—Ç—å\n'
              '`/sq 1` - —Å–¥–µ–ª–∞—Ç—å —Ñ–æ–Ω –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º\n'
              '`/nbg 1` - –Ω–µ –∑–∞—Ç–µ–º–Ω—è—Ç—å\n\n'
              '‚öô –°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏\n'
              '`/f 1` - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –∫–∞–∫ —Ñ–∞–π–ª\n\n'
              '‚ö† *–§–ª–∞–≥–∏ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Ç–∞–∫*:\n'
              '/flag { –∑–Ω–∞—á–µ–Ω–∏–µ }') % msg.from_user.first_name

    await msg.answer_sticker(sticker='CAACAgIAAxkBAAN7ZFD2m2SgAxweWK9uflY2iieRfEQAAlEAAyRxYhrpRxtfxj-nIy8E')
    await msg.answer(text=answer, parse_mode='markdown')


async def make_preview_handler(msg: Message):
    answer_msg = await msg.answer(text='‚åõ')

    try:
        if msg.photo:
            # —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä—É—Ç–∏–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            download_tasks = []

            # –æ–±—Ö–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É –¥–ª—è –∫–∞–∂–¥–æ–π
            for photo in msg.photo:
                download_tasks.append(
                    photo.download(destination_file='./source/service/%s-background.jpg' % msg.from_user.id))

            # –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            await asyncio.gather(*download_tasks)

            text, description = msg.caption.split('\n\n', maxsplit=1)
            flags, img = make_preview(text, description, msg.from_user.id, True)
        else:
            text, description = msg.text.split('\n\n')
            flags, img = make_preview(text, description, msg.from_user.id)

        byte_img = io.BytesIO()
        img.save(byte_img, format='JPEG')
        byte_img.seek(0)

        if flags.get('f', False):
            img_path = './source/service/%s-background.jpg' % msg.from_user.id
            img.save(img_path)
            await msg.answer_document(document=open(img_path, 'rb'))
        else:
            await msg.answer_photo(photo=byte_img)
        img.close()
        byte_img.close()
        try:
            os.remove('./source/service/%s-background.jpg' % msg.from_user.id)
        except FileNotFoundError:
            ...
    except FileNotFoundError:
        ...
    except Exception as error:
        await msg.answer_sticker(sticker='CAACAgIAAxkBAAN5ZFD2fS4yNhKmu1QU5JOcaz5ktPwAAk8AAyRxYhpYzOfip1OVSC8E')
        await msg.answer(text='üôÉ –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ñ–ª–∞–≥–∏.\n\n'
                              '‚ö† %s' % error)
    await answer_msg.delete()


async def get_sticker_id_handler(msg: Message):
    await msg.answer_sticker(sticker=msg.sticker.file_id)
    print(msg.sticker.file_id)
